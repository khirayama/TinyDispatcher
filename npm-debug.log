0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@2.13.3
3 info using node@v0.12.7
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec { raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/KotaroHirayama/Work/TinyDispatcher',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/KotaroHirayama/.npm/tiny-dispatcher/0.1.0/package.tgz not in flight; packing
9 verbose tar pack [ '/Users/KotaroHirayama/.npm/tiny-dispatcher/0.1.0/package.tgz',
9 verbose tar pack   '/Users/KotaroHirayama/Work/TinyDispatcher' ]
10 verbose tarball /Users/KotaroHirayama/.npm/tiny-dispatcher/0.1.0/package.tgz
11 verbose folder /Users/KotaroHirayama/Work/TinyDispatcher
12 info prepublish tiny-dispatcher@0.1.0
13 verbose addLocalTarball adding from inside cache /Users/KotaroHirayama/.npm/tiny-dispatcher/0.1.0/package.tgz
14 silly cache afterAdd tiny-dispatcher@0.1.0
15 verbose afterAdd /Users/KotaroHirayama/.npm/tiny-dispatcher/0.1.0/package/package.json not in flight; writing
16 verbose afterAdd /Users/KotaroHirayama/.npm/tiny-dispatcher/0.1.0/package/package.json written
17 silly publish { name: 'tiny-dispatcher',
17 silly publish   version: '0.1.0',
17 silly publish   description: 'simple & tiny event dispatcher for es6.',
17 silly publish   main: 'TinyDispatcher.js',
17 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
17 silly publish   repository:
17 silly publish    { type: 'git',
17 silly publish      url: 'git+https://github.com/khirayama/TinyDispatcher.git' },
17 silly publish   keywords:
17 silly publish    [ 'dispatcher',
17 silly publish      'flux',
17 silly publish      'observer',
17 silly publish      'event',
17 silly publish      'events',
17 silly publish      'trigger',
17 silly publish      'emitter',
17 silly publish      'pubsub',
17 silly publish      'listener' ],
17 silly publish   author: { name: 'khirayama' },
17 silly publish   license: 'MIT',
17 silly publish   bugs: { url: 'https://github.com/khirayama/TinyDispatcher/issues' },
17 silly publish   homepage: 'https://github.com/khirayama/TinyDispatcher#readme',
17 silly publish   readme: '# TinyDispatcher\nsimple &amp; tiny event dispatcher for es6.\n\n### Getting Started\n\n```\nimport TinyDispatcher from \'TinyDispatcehr\';\n\nlet ApplicationDispatcher = new TinyDispatcher();\n```\n\n## API\nIt has 3 API(on, off, dispatch) only.\n\n### on\n\n```\nconst CHANGE_EVENT = \'CHANGE_EVENT\';\n\nApplicationDispatcher.on(CHANGE_EVENT, callbak);\n```\n\n### off\n\n```\nconst CHANGE_EVENT = \'CHANGE_EVENT\';\n\nApplicationDispatcher.off(CHANGE_EVENT);\n```\n\n### dispatch\n\n```\nconst CHANGE_EVENT = \'CHANGE_EVENT\';\nlet payload = {\n  message: \'Hello TinyDispatcher!\'\n};\n\nApplicationDispatcher.dispatch(CHANGE_EVENT, payload});\n```\n\n## example\n\n### simple and complete example.\n\n```\nlet CHANGE_EVENT = \'CHANGE_EVENT\';\n\nApplicationDispatcher.on(CHANGE_EVENT, (payload) => {\n  alert(payload.message);\n});\n\nsetTimeout(() => {\n  ApplicationDispatcher.dispatch(CHANGE_EVENT, {message: \'Hello TinyDispatcher!\'}});\n}, 1000);\n```\n\n### example in Flux Store.\n```\nimport TinyDispatcher from \'TinyDispatcehr\';\n\nconst CHANGE_EVENT = \'CHANGE\';\n\nclass Store extends TinyDispatcehr {\n  constructor() {\n    super();\n  }\n  dispatchChange() {\n    this.dispatch(CHANGE_EVENT);\n  }\n  addChangeListener(callback) {\n    this.on(CHANGE_EVENT, callback);\n  }\n  removeChangeListener(callback) {\n    this.removeListener(CHANGE_EVENT, callback);\n  }\n}\n\nclass SomeStore extends Store {\n  constructor() {\n    super();\n    this._message = \'\';\n  }\n  _create(message) {\n    this._message = message;\n    this.dispatchChange(); // define Store extened TinyDispatcher.\n  }\n  getMessage() {\n    return this._message;\n  }\n}\nnew SomeStore(); // singleton\n```\n\n\n### if you use React....\nLinten Store\'s events at ```componentDisMount```.\n```\nclass SomeComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      message: \'Hello World.\'\n    };\n  }\n  componentDidMount() {\n    SomeStore.addChangeListener(this._onChange.bind(this));\n  }\n  render() {\n    return <div>{this.state.message}</div>;\n  }\n  _onChange() {\n    this.setState({\n      message: SomeStore.getMessage()\n    });\n  }\n}\n```\n\n',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   gitHead: '0edf5ae639cfe8c816a189c64e9687b5ec6ded01',
17 silly publish   _id: 'tiny-dispatcher@0.1.0',
17 silly publish   _shasum: '6548c57b557762848b988560f8c1e342cabd01de',
17 silly publish   _from: '.' }
18 verbose getPublishConfig undefined
19 silly mapToRegistry name tiny-dispatcher
20 silly mapToRegistry using default registry
21 silly mapToRegistry registry https://registry.npmjs.org/
22 silly mapToRegistry uri https://registry.npmjs.org/tiny-dispatcher
23 verbose publish registryBase https://registry.npmjs.org/
24 silly publish uploading /Users/KotaroHirayama/.npm/tiny-dispatcher/0.1.0/package.tgz
25 verbose stack Error: auth required for publishing
25 verbose stack     at CachingRegistryClient.publish (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/publish.js:30:14)
25 verbose stack     at /usr/local/lib/node_modules/npm/lib/publish.js:134:14
25 verbose stack     at mapToRegistry (/usr/local/lib/node_modules/npm/lib/utils/map-to-registry.js:55:3)
25 verbose stack     at publish_ (/usr/local/lib/node_modules/npm/lib/publish.js:104:3)
25 verbose stack     at Array.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/slide/lib/bind-actor.js:15:8)
25 verbose stack     at LOOP (/usr/local/lib/node_modules/npm/node_modules/slide/lib/chain.js:15:14)
25 verbose stack     at LOOP (/usr/local/lib/node_modules/npm/node_modules/slide/lib/chain.js:14:28)
25 verbose stack     at chain (/usr/local/lib/node_modules/npm/node_modules/slide/lib/chain.js:20:5)
25 verbose stack     at /usr/local/lib/node_modules/npm/lib/publish.js:73:5
25 verbose stack     at RES (/usr/local/lib/node_modules/npm/node_modules/inflight/inflight.js:23:14)
26 verbose cwd /Users/KotaroHirayama/Work/TinyDispatcher
27 error Darwin 14.4.0
28 error argv "node" "/usr/local/bin/npm" "publish"
29 error node v0.12.7
30 error npm  v2.13.3
31 error code ENEEDAUTH
32 error need auth auth required for publishing
32 error need auth You need to authorize this machine using `npm adduser`
33 verbose exit [ 1, true ]
